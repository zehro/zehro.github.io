/* Applies a gradient background, defined from the passed in arguments.
 *
 * @param {mixed}   $type           Defines the type of gradient.
 * @param {mixed}   $direction      Defines the direction of the the gradient.
 * @param {list}    $colors         Defines the colors used in the gradient.
 */
.gradient(@type; @direction; @colors; @prefixes: webkit, moz, ms, o; @index: length(@prefixes)) when (@index > 0) {
    .gradient(@type; @direction; @colors; @prefixes; (@index - 1));

    @prefix  : extract(@prefixes, @index);
    @dir-old : 90 - (@direction);

    background: ~'-@{prefix}-@{type}-gradient(@{dir-old}, @{colors})';

    & when ( @index = length(@prefixes) ) {
        background: ~'@{type}-gradient(@{direction}, @{colors})';
    }
}

/* Applies a border-radius, defined from the passed in arguments.
 *
 * @param {mixed}   $radius         Defines the radius of the border-radius.
 */
.border-radius(@radius) {
    -webkit-border-radius: @radius;
       -moz-border-radius: @radius;
            border-radius: @radius;
}

/* Applies a transition animation, defined from the passed in arguments.
 *
 * @param {mixed}   $type           Defines the type of animation.
 * @param {mixed}   $time           Defines the animation's length of time.
 * @param {mixed}   $transition     Defines the animation's transition.
 */
.transition(@type; @time; @transition) {
    -webkit-transition: @type @time @transition;
       -moz-transition: @type @time @transition;
        -ms-transition: @type @time @transition;
         -o-transition: @type @time @transition;
            transition: @type @time @transition;
}
